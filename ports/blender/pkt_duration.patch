diff -Naur a/source/blender/imbuf/intern/anim_movie.cc b/source/blender/imbuf/intern/anim_movie.cc
--- a/source/blender/imbuf/intern/anim_movie.cc	2024-04-10 17:15:39.000000000 +0200
+++ b/source/blender/imbuf/intern/anim_movie.cc	2024-12-28 14:20:21.954379242 +0100
@@ -941,7 +941,7 @@
 /* Return frame that matches `pts_to_search`, nullptr if matching frame does not exist. */
 static AVFrame *ffmpeg_frame_by_pts_get(struct anim *anim, int64_t pts_to_search)
 {
-  /* NOTE: `frame->pts + frame->pkt_duration` does not always match pts of next frame.
+  /* NOTE: `frame->pts + frame->duration` does not always match pts of next frame.
    * See footage from #86361. Here it is OK to use, because PTS must match current or backup frame.
    * If there is no current frame, return nullptr.
    */
@@ -951,7 +951,7 @@
 
   const bool backup_frame_ready = anim->pFrame_backup_complete;
   const int64_t recent_start = av_get_pts_from_frame(anim->pFrame);
-  const int64_t recent_end = recent_start + anim->pFrame->pkt_duration;
+  const int64_t recent_end = recent_start + anim->pFrame->duration;
   const int64_t backup_start = backup_frame_ready ? av_get_pts_from_frame(anim->pFrame_backup) : 0;
 
   AVFrame *best_frame = nullptr;
@@ -1160,7 +1160,7 @@
 static void ffmpeg_scan_log(struct anim *anim, int64_t pts_to_search)
 {
   int64_t frame_pts_start = av_get_pts_from_frame(anim->pFrame);
-  int64_t frame_pts_end = frame_pts_start + anim->pFrame->pkt_duration;
+  int64_t frame_pts_end = frame_pts_start + anim->pFrame->duration;
   av_log(anim->pFormatCtx,
          AV_LOG_DEBUG,
          "  SCAN WHILE: PTS range %" PRId64 " - %" PRId64 " in search of %" PRId64 "\n",
