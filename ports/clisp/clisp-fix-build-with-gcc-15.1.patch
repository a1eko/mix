commit 1fe3cb23a56714086c278cc931c47c52ba6f3823
Author: Carl Smedstad <carsme@archlinux.org>
Date:   Sun Jun 15 20:33:53 2025 +0200

    Fix build with GCC 15.1
    
    Produced by squashing the following upstream commits and removing the changelog
    edits:
    - a4270765e364bd3e71c0a5f841977954fcc56345
    - dd899c54f551d0fa4bb5418a5048e91aa4e7353c

diff --git a/src/package.d b/src/package.d
index 1ce9cdfc5..858097430 100644
--- a/src/package.d
+++ b/src/package.d
@@ -188,12 +188,11 @@ local maygc object rehash_symtab (object symtab) {
      first process the symbols, that sit in lists
      (maybe Conses become free): */
   {
-    var gcv_object_t* offset = 0; /* offset = sizeof(gcv_object_t)*index */
+    var uintP offset = 0; /* offset = sizeof(gcv_object_t)*index */
     var uintC count = oldsize;
     do {
       var object oldentry = /* entry with number index in oldtable */
-        *(gcv_object_t*)(pointerplus(&TheSvector(STACK_2)->data[0],
-                                     (aint)offset));
+        *(gcv_object_t*)(pointerplus(&TheSvector(STACK_2)->data[0],offset));
       if (consp(oldentry)) /* this time process only non-empty symbol-lists */
         do {
           pushSTACK(Cdr(oldentry)); /* save rest-list */
@@ -205,22 +204,21 @@ local maygc object rehash_symtab (object symtab) {
           newinsert(Car(oldentry),newsize);
           oldentry = popSTACK(); /* rest-list */
         } while (consp(oldentry));
-      offset++;
+      offset += sizeof(gcv_object_t);
     } while (--count);
   }
   { /* then process symbols, that sit there collision-free: */
-    var gcv_object_t* offset = 0; /* offset = sizeof(gcv_object_t)*index */
+    var uintP offset = 0; /* offset = sizeof(gcv_object_t)*index */
     var uintC count;
     dotimespC(count,oldsize, {
       var object oldentry = /* entry with number index in oldtable */
-        *(gcv_object_t*)(pointerplus(&TheSvector(STACK_2)->data[0],
-                                     (aint)offset));
+        *(gcv_object_t*)(pointerplus(&TheSvector(STACK_2)->data[0],offset));
       if (!listp(oldentry)) { /* this time process only symbols /= NIL */
         pushSTACK(oldentry); /* dummy, so that the stack is fine */
         newinsert(oldentry,newsize); /* enter into the new table */
         skipSTACK(1);
       }
-      offset++;
+      offset += sizeof(gcv_object_t);
     });
   }
   /* stack layout: tab, oldtable, free-conses, newtable. */
@@ -1413,11 +1411,11 @@ local maygc void map_symtab (object fun, object symtab) {
   pushSTACK(Symtab_table(symtab)); /* table vector */
   /* number of entries */
   var uintL size = posfixnum_to_V(Symtab_size(symtab));
-  var gcv_object_t* offset = 0; /* offset = sizeof(gcv_object_t)*index */
+  var uintP offset = 0; /* offset = sizeof(gcv_object_t)*index */
   var uintC count;
   dotimespC(count,size, {
     var object entry = /* entry with number index in table */
-      *(gcv_object_t*)(pointerplus(&TheSvector(STACK_0)->data[0],(aint)offset));
+      *(gcv_object_t*)(pointerplus(&TheSvector(STACK_0)->data[0],offset));
     if (atomp(entry)) {
       if (!nullp(entry)) {
         /* entry is a symbol /= NIL */
@@ -1434,7 +1432,7 @@ local maygc void map_symtab (object fun, object symtab) {
       } while (!matomp(STACK_0));
       skipSTACK(1);
     }
-    offset++;
+    offset += sizeof(gcv_object_t);
   });
   skipSTACK(2);
 }
@@ -1452,11 +1450,11 @@ local maygc void map_symtab_c (one_sym_function_t* fun, void* data, object symta
   pushSTACK(Symtab_table(symtab)); /* table vector */
   /* number of entries */
   var uintL size = posfixnum_to_V(Symtab_size(symtab));
-  var gcv_object_t* offset = 0; /* offset = sizeof(gcv_object_t)*index */
+  var uintP offset = 0; /* offset = sizeof(gcv_object_t)*index */
   var uintC count;
   dotimespC(count,size, {
     var object entry = /* entry with number index in table */
-      *(gcv_object_t*)(pointerplus(&TheSvector(STACK_0)->data[0],(aint)offset));
+      *(gcv_object_t*)(pointerplus(&TheSvector(STACK_0)->data[0],offset));
     if (atomp(entry)) {
       if (!nullp(entry)) { /* entry is a symbol /= NIL */
         (*fun)(data,entry); /* apply function */
@@ -1470,7 +1468,7 @@ local maygc void map_symtab_c (one_sym_function_t* fun, void* data, object symta
       } while (!matomp(STACK_0));
       skipSTACK(1);
     }
-    offset++;
+    offset += sizeof (gcv_object_t);
   });
   skipSTACK(1);
 }
