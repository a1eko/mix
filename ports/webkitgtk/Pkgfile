# Description: Small, efficient and fast rendering engine for Web Browsers
# URL: https://www.webkitgtk.org/
# Maintainer: Tim Biermann, tbier at posteo dot de
# Depends on: gst-plugins-base gtk4 hyphen icu lcms2 libseccomp libsecret libsoup3 libwebp ruby unifdef woff2 xorg-libxcomposite
# Optional: bubblewrap enchant geoclue gst-plugins-bad libavif libmanette libnotify openjpeg2 wpebackend-fdo xdg-dbus-proxy

name=webkitgtk
version=2.48.3
release=mix-1
source=(https://webkitgtk.org/releases/webkitgtk-$version.tar.xz)

build() {
  # fail the build if dependencies are not met
  ls /usr/include/harfbuzz/hb-icu.h || (printf '\e[1;31m%-6s\e[m\n' "You need to install icu, then rebuild harfbuzz for webkitgtk to work, quitting..." ; exit 1)

  # Make sure we do not have ccache masquerade directory in PATH.
  #[ -e '/usr/bin/ccache' ] && PATH="$(echo ${PATH} | awk -v RS=: -v ORS=: '/ccache/ {next} {print}' | sed 's/:*$//')"

  pkz -i list openjpeg2 || PKGMK_WEBKITGTK+=' -DUSE_OPENJPEG=OFF'
  pkz -i list enchant || PKGMK_WEBKITGTK+=' -DENABLE_SPELLCHECK=OFF'
  pkz -i list geoclue && PKGMK_WEBKITGTK+=' -DENABLE_GEOLOCATION=ON' || PKGMK_WEBKITGTK+=' -DENABLE_GEOLOCATION=OFF'
  pkz -i list bubblewrap xdg-dbus-proxy && PKGMK_WEBKITGTK+=' -DENABLE_BUBBLEWRAP_SANDBOX=ON' \
  || PKGMK_WEBKITGTK+=' -DENABLE_BUBBLEWRAP_SANDBOX=OFF'
  pkz -i list wpebackend-fdo || PKGMK_WEBKITGTK+=' -DUSE_WPE_RENDERER=OFF'
  pkz -i list libmanette || PKGMK_WEBKITGTK+=' -DENABLE_GAMEPAD=OFF'
  pkz -i list libavif || PKGMK_WEBKITGTK+=' -DUSE_AVIF=OFF'
  pkz -i list gst_plugins-bad || PKGMK_WEBKITGTK+=' -DUSE_GSTREAMER_TRANSCODER=OFF'

  # mix: limit number of threads in build, needs 2GB of RAM per CPU vcore
  # mix: breaks surf build if compiled with gtk4 (add '-D USE_GTK4=OFF')

  cmake -S webkitgtk-$version -B build -G Ninja ${PKGMK_WEBKITGTK} \
    -D CMAKE_INSTALL_PREFIX=/usr \
    -D CMAKE_INSTALL_LIBDIR=/usr/lib \
    -D CMAKE_INSTALL_LIBEXECDIR=/usr/lib \
    -D CMAKE_BUILD_TYPE=Release \
    -D CMAKE_CXX_FLAGS_RELEASE="${CXXFLAGS} -DNDEBUG -ffat-lto-objects -fcf-protection=none" \
    -D CMAKE_C_FLAGS_RELEASE="${CFLAGS} -DNDEBUG -ffat-lto-objects -fcf-protection=none" \
    -D CMAKE_SKIP_RPATH=ON \
    -D PORT=GTK \
    -D ENABLE_MINIBROWSER=ON \
    -D ENABLE_JOURNALD_LOG=OFF \
    -D ENABLE_DOCUMENTATION=OFF \
    -D USE_LIBBACKTRACE=OFF \
    -D USE_JPEGXL=OFF \
    -D USE_GTK4=OFF \
    -D USE_SYSTEM_SYSPROF_CAPTURE=NO \
    -D ENABLE_SPEECH_SYNTHESIS=NO \
    -Wno-dev

  cmake --build build -j4
  DESTDIR=$PKG cmake --install build

  rm -r $PKG/usr/share/locale
}
